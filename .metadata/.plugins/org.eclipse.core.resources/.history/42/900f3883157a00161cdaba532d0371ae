package ADT_lists;

public class LnkRefBased implements Lists {//also known as linkedlist
	
	private node head;
	private int numItems;
	
	
	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return (numItems == 0);
	}
	@Override
	public int size() {
		// TODO Auto-generated method stub
		return numItems;
	}
	private node find(int index)
	{	node cuff = head;
		for(int step=0;step<index;step++)
		{
			cuff = cuff.next;
		}
		return cuff;
		
	}
	@Override
	public void add(int index, Object item) throws ListOutofBoundsException {
		// TODO Auto-generated method stub
		if(index>=0 && (index<=numItems))
		{
			if(index==0)
			{
				node newNode = new node(item,head);
			}
			else
			{	node prev = find(index-1);//get prevoius node so we can use its next to the line 
				node newNode = new node(item,prev.next );//make a new node point to prevouis next
				prev.next = newNode;// make prev point to the Node;
			}		
				numItems++;
		}
			else
			{
			throw new ListOutofBoundsException("Out of bounds on add method");
			}
		
		}
		
	
	@Override
	public void remove(int index) 
	{
		// TODO Auto-generated method stub
		if(index>=0 && (index<=numItems))
		{
			if(index==0)
			{
				head = head.next;
			}
		}
	}
	@Override
	public Object get(int index) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public void removeAll() {
		// TODO Auto-generated method stub
		
	}
	

}
